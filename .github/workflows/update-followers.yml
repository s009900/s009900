name: Update Followers List

on:
  schedule:
    # Runs daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-followers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Recent Followers
        id: get-followers
        run: |
          # Get the most recent 4 followers using the GitHub Events API
          # First, get the list of all followers
          ALL_FOLLOWERS_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/users/s009900/followers?per_page=100")
          
          # Get total followers count
          USER_INFO_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/users/s009900")
          
          # Parse the JSON responses
          TOTAL_FOLLOWERS=$(echo "$USER_INFO_JSON" | jq -r '.followers')
          
          # Get the most recent 4 followers by checking when they followed
          # This requires checking the events for each follower to see when they followed
          # We'll use the events API to get the most recent follow events
          EVENTS_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/users/s009900/received_events?per_page=100")
            
          # Extract the most recent 4 follow events
          RECENT_FOLLOWERS=$(echo "$EVENTS_JSON" | jq -r '
            [.[] | select(.type == "FollowEvent") | {
              login: .actor.login,
              avatar_url: .actor.avatar_url,
              html_url: .actor.html_url,
              created_at: .created_at
            }] | sort_by(.created_at) | reverse | .[0:4]')
            
          # Use these recent followers instead of the basic followers list
          FOLLOWERS_JSON="$RECENT_FOLLOWERS"
          
          # Generate the table rows
          TABLE_ROWS=""
          INDEX=1
          
          echo "$FOLLOWERS_JSON" | jq -r '.[] | [.login, .avatar_url, .html_url] | @tsv' | while IFS=$'\t' read -r login avatar_url html_url; do
            TABLE_ROWS+="| $INDEX | <img src=\"$avatar_url\" width=\"50\" height=\"50\" /> | [@$login]($html_url) |"$'\n'
            # Save the table rows to a file to persist outside the loop
            echo "$TABLE_ROWS" > /tmp/followers_table.txt
            
            ((INDEX++))
          done
          
          # Read the table rows from the file
          TABLE_ROWS=$(cat /tmp/followers_table.txt)
          
          # Save outputs to environment files
          echo "$TABLE_ROWS" > "$GITHUB_OUTPUT"
          echo "table-rows<<EOF" >> "$GITHUB_OUTPUT"
          echo "$TABLE_ROWS" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          
          echo "total-followers=$TOTAL_FOLLOWERS" >> "$GITHUB_OUTPUT"
          
          echo "Successfully fetched followers data"

      - name: Update Followers README
        run: |
          # Get the generated table rows and total followers from previous step
          TABLE_ROWS='${{ steps.get-followers.outputs.table-rows }}'
          TOTAL_FOLLOWERS='${{ steps.get-followers.outputs.total-followers }}'
          TIMESTAMP=$(date -u +"%a, %d %b %Y %H:%M:%S GMT")
          
          echo "Updating followers README with $TOTAL_FOLLOWERS total followers..."
          
          # Create the directory if it doesn't exist
          mkdir -p additional-readmes
          
          # Create the followers content
          {
            echo "# 👥 Recent Followers"
            echo ""
            echo "_Last updated: ${TIMESTAMP}_"
            echo ""
            echo "| # | Avatar | Username |"
            echo "|--:|:------:|:---------|"
            echo "$TABLE_ROWS"
            echo ""
            echo "_Showing 4 most recent of ${TOTAL_FOLLOWERS} total followers_"
            echo ""
            echo "_✨ Updated automatically via GitHub Actions_"
            echo ""
            echo "[← Back to main README](../README.md)"
          } > additional-readmes/followers.readme.md
          
          echo "Successfully updated followers README"

      - name: Commit and Push Changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Check if there are changes to commit
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git add additional-readmes/followers.readme.md
            git commit -m "Update followers list"
            git push
            echo "Changes committed and pushed successfully"
          fi