name: Update Followers List

on:
  schedule:
    # Runs daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-followers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Recent Followers
        uses: actions/github-script@v6
        id: get-followers
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { core } = require('@actions/core');
            const { github } = require('@actions/github');
            
            try {
              // Get ALL followers to find the most recent ones
              const allFollowers = [];
              let page = 1;
              let hasNextPage = true;
              
              console.log('Fetching all followers to find most recent ones...');
              
              while (hasNextPage && allFollowers.length < 100) { // Limit to 100 for safety
                const response = await github.rest.users.listFollowersForUser({
                  username: 's009900',
                  per_page: 100,
                  page: page,
                  headers: {'X-GitHub-Api-Version': '2022-11-28'}
                });
                
                if (response.data.length === 0) {
                  hasNextPage = false;
                } else {
                  allFollowers.push(...response.data);
                  console.log(`Fetched page ${page}: ${response.data.length} followers`);
                  page++;
                  // Add small delay to avoid rate limiting
                  await new Promise(resolve => setTimeout(resolve, 100));
                }
              }
              
              console.log(`Found ${allFollowers.length} total followers`);
              
              // Sort by most recent (reverse the array since GitHub returns oldest first)
              const recentFollowers = [...allFollowers].reverse().slice(0, 4);
              
              console.log('Most recent followers:', recentFollowers.map(f => f.login));
              
              // Generate table content
              let tableContent = `| # | Avatar | Username |\n|--:|:------:|:---------|\n`;
              recentFollowers.forEach((follower, index) => {
                tableContent += `| ${index+1} | <img src="${follower.avatar_url}" width="50" height="50" /> | [@${follower.login}](${follower.html_url}) |\n`;
              });
              
              // Store as output for next step
              core.setOutput('followersTable', tableContent);
              core.setOutput('followersCount', allFollowers.length);
              console.log('Followers table generated successfully');
              
            } catch (error) {
              console.error('Error fetching followers:', error);
              core.setFailed(error.message);
            }

      - name: Update Followers README
        run: |
          # Get the generated table from previous step
          FOLLOWERS_TABLE="${{ steps.get-followers.outputs.followersTable }}"
          TOTAL_FOLLOWERS="${{ steps.get-followers.outputs.followersCount }}"
          TIMESTAMP=$(date -u +"%a, %d %b %Y %H:%M:%S GMT")
          
          echo "Updating followers README with $TOTAL_FOLLOWERS total followers..."
          
          # Create the followers content with escaped newlines
          {
            echo "# 👥 Recent Followers"
            echo ""
            echo "_Last updated: ${TIMESTAMP}_"
            echo ""
            echo "$FOLLOWERS_TABLE"
            echo ""
            echo "_Showing 4 most recent of ${TOTAL_FOLLOWERS} total followers_"
            echo ""
            echo "_✨ Updated automatically via GitHub Actions_"
            echo ""
            echo "[← Back to main README](../README.md)"
          } > additional-readmes/followers.readme.md
          
          echo "Successfully updated followers README"

      - name: Commit and Push Changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Check if there are changes to commit
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git add additional-readmes/followers.readme.md
            git commit -m "Update followers list"
            git push
            echo "Changes committed and pushed successfully"
          fi